// <auto-generated />
using System;
using EduZasAPI.Infraestructure.EntityFramework.Application.Common;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EduZasAPI.Infraestructure.EntityFramework.Migrations
{
    [DbContext(typeof(EduZasDotnetContext))]
    partial class EduZasDotnetContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_uca1400_ai_ci")
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("EduZasAPI.Infraestructure.EntityFramework.Application.ClassProfessors.ClassProfessor", b =>
                {
                    b.Property<string>("ClassId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("class_id");

                    b.Property<ulong>("ProfessorId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("professor_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("current_timestamp()");

                    b.HasKey("ClassId", "ProfessorId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "ProfessorId" }, "professor_id");

                    b.ToTable("class_professors", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_ci");
                });

            modelBuilder.Entity("EduZasAPI.Infraestructure.EntityFramework.Application.ClassStudents.ClassStudent", b =>
                {
                    b.Property<string>("ClassId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("class_id");

                    b.Property<ulong>("StudentId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("student_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("current_timestamp()");

                    b.HasKey("ClassId", "StudentId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "StudentId" }, "student_id");

                    b.ToTable("class_students", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_ci");
                });

            modelBuilder.Entity("EduZasAPI.Infraestructure.EntityFramework.Application.Classes.Class", b =>
                {
                    b.Property<string>("ClassId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("class_id");

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("active")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("class_name");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("ModifiedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_at")
                        .HasDefaultValueSql("current_timestamp()");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("ModifiedAt"));

                    b.Property<ulong>("OwnerId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("owner_id");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("section");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("subject");

                    b.HasKey("ClassId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "OwnerId" }, "owner_id");

                    b.ToTable("classes", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_ci");
                });

            modelBuilder.Entity("EduZasAPI.Infraestructure.EntityFramework.Application.Notifications.Notification", b =>
                {
                    b.Property<ulong>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("notification_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("NotificationId"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("active")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("ClassId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("class_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("title");

                    b.HasKey("NotificationId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ClassId" }, "class_id");

                    b.ToTable("notifications", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_ci");
                });

            modelBuilder.Entity("EduZasAPI.Infraestructure.EntityFramework.Application.NotificationsPerUser.NotificationPerUser", b =>
                {
                    b.Property<ulong>("NotificationId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("notification_id");

                    b.Property<ulong>("UserId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("user_id");

                    b.Property<DateTime>("ModifiedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_at")
                        .HasDefaultValueSql("current_timestamp()");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("ModifiedAt"));

                    b.Property<bool>("Readed")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("readed");

                    b.HasKey("NotificationId", "UserId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "UserId" }, "user_id");

                    b.ToTable("notification_per_user", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_ci");
                });

            modelBuilder.Entity("EduZasAPI.Infraestructure.EntityFramework.Application.Resources.Resource", b =>
                {
                    b.Property<ulong>("ResourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("resource_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("ResourceId"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("active")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("json")
                        .HasColumnName("content");

                    b.Property<ulong>("ProfessorId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("professor_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("title");

                    b.HasKey("ResourceId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ProfessorId" }, "professor_id1");

                    b.ToTable("resources", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_ci");
                });

            modelBuilder.Entity("EduZasAPI.Infraestructure.EntityFramework.Application.Tests.Test", b =>
                {
                    b.Property<ulong>("TestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("test_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("TestId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("json")
                        .HasColumnName("content");

                    b.Property<ulong>("ProfessorId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("professor_id");

                    b.Property<uint?>("TimeLimitMinutes")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("time_limit_minutes");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("title");

                    b.HasKey("TestId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ProfessorId" }, "professor_id2");

                    b.ToTable("tests", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_ci");
                });

            modelBuilder.Entity("EduZasAPI.Infraestructure.EntityFramework.Application.TestsPerClass.TestPerClass", b =>
                {
                    b.Property<ulong>("TestId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("test_id");

                    b.Property<string>("ClassId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("class_id");

                    b.Property<bool>("Visible")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("visible");

                    b.HasKey("TestId", "ClassId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "ClassId" }, "class_id1");

                    b.ToTable("tests_per_class", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_ci");
                });

            modelBuilder.Entity("EduZasAPI.Infraestructure.EntityFramework.Application.Users.User", b =>
                {
                    b.Property<ulong>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("user_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("UserId"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("active")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("email");

                    b.Property<string>("FatherLastname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("father_lastname");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("first_name");

                    b.Property<string>("MidName")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("mid_name");

                    b.Property<DateTime>("ModifiedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_at")
                        .HasDefaultValueSql("current_timestamp()");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("ModifiedAt"));

                    b.Property<string>("MotherLastname")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("mother_lastname");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("password");

                    b.Property<uint?>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("role")
                        .HasDefaultValueSql("'0'");

                    b.HasKey("UserId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Email" }, "email")
                        .IsUnique();

                    b.ToTable("users", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_ci");
                });

            modelBuilder.Entity("ResourcesPerClass", b =>
                {
                    b.Property<string>("ClassId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("class_id");

                    b.Property<ulong>("ProfessorId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("professor_id");

                    b.HasKey("ClassId", "ProfessorId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "ProfessorId" }, "professor_id3");

                    b.ToTable("resources_per_class", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_ci");
                });

            modelBuilder.Entity("EduZasAPI.Infraestructure.EntityFramework.Application.ClassProfessors.ClassProfessor", b =>
                {
                    b.HasOne("EduZasAPI.Infraestructure.EntityFramework.Application.Classes.Class", "Class")
                        .WithMany("ClassProfessors")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("class_professors_ibfk_1");

                    b.HasOne("EduZasAPI.Infraestructure.EntityFramework.Application.Users.User", "Professor")
                        .WithMany("ClassProfessors")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("class_professors_ibfk_2");

                    b.Navigation("Class");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("EduZasAPI.Infraestructure.EntityFramework.Application.ClassStudents.ClassStudent", b =>
                {
                    b.HasOne("EduZasAPI.Infraestructure.EntityFramework.Application.Classes.Class", "Class")
                        .WithMany("ClassStudents")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("class_students_ibfk_1");

                    b.HasOne("EduZasAPI.Infraestructure.EntityFramework.Application.Users.User", "Student")
                        .WithMany("ClassStudents")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("class_students_ibfk_2");

                    b.Navigation("Class");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduZasAPI.Infraestructure.EntityFramework.Application.Classes.Class", b =>
                {
                    b.HasOne("EduZasAPI.Infraestructure.EntityFramework.Application.Users.User", "Owner")
                        .WithMany("Classes")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("classes_ibfk_1");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("EduZasAPI.Infraestructure.EntityFramework.Application.Notifications.Notification", b =>
                {
                    b.HasOne("EduZasAPI.Infraestructure.EntityFramework.Application.Classes.Class", "Class")
                        .WithMany("Notifications")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("notifications_ibfk_1");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("EduZasAPI.Infraestructure.EntityFramework.Application.NotificationsPerUser.NotificationPerUser", b =>
                {
                    b.HasOne("EduZasAPI.Infraestructure.EntityFramework.Application.Notifications.Notification", "Notification")
                        .WithMany("NotificationPerUsers")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("notification_per_user_ibfk_1");

                    b.HasOne("EduZasAPI.Infraestructure.EntityFramework.Application.Users.User", "User")
                        .WithMany("NotificationPerUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("notification_per_user_ibfk_2");

                    b.Navigation("Notification");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduZasAPI.Infraestructure.EntityFramework.Application.Resources.Resource", b =>
                {
                    b.HasOne("EduZasAPI.Infraestructure.EntityFramework.Application.Users.User", "Professor")
                        .WithMany("Resources")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("resources_ibfk_1");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("EduZasAPI.Infraestructure.EntityFramework.Application.Tests.Test", b =>
                {
                    b.HasOne("EduZasAPI.Infraestructure.EntityFramework.Application.Users.User", "Professor")
                        .WithMany("Tests")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("tests_ibfk_1");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("EduZasAPI.Infraestructure.EntityFramework.Application.TestsPerClass.TestPerClass", b =>
                {
                    b.HasOne("EduZasAPI.Infraestructure.EntityFramework.Application.Classes.Class", "Class")
                        .WithMany("TestsPerClasses")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("tests_per_class_ibfk_2");

                    b.HasOne("EduZasAPI.Infraestructure.EntityFramework.Application.Tests.Test", "Test")
                        .WithMany("TestsPerClasses")
                        .HasForeignKey("TestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("tests_per_class_ibfk_1");

                    b.Navigation("Class");

                    b.Navigation("Test");
                });

            modelBuilder.Entity("ResourcesPerClass", b =>
                {
                    b.HasOne("EduZasAPI.Infraestructure.EntityFramework.Application.Classes.Class", null)
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("resources_per_class_ibfk_1");

                    b.HasOne("EduZasAPI.Infraestructure.EntityFramework.Application.Users.User", null)
                        .WithMany()
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("resources_per_class_ibfk_2");
                });

            modelBuilder.Entity("EduZasAPI.Infraestructure.EntityFramework.Application.Classes.Class", b =>
                {
                    b.Navigation("ClassProfessors");

                    b.Navigation("ClassStudents");

                    b.Navigation("Notifications");

                    b.Navigation("TestsPerClasses");
                });

            modelBuilder.Entity("EduZasAPI.Infraestructure.EntityFramework.Application.Notifications.Notification", b =>
                {
                    b.Navigation("NotificationPerUsers");
                });

            modelBuilder.Entity("EduZasAPI.Infraestructure.EntityFramework.Application.Tests.Test", b =>
                {
                    b.Navigation("TestsPerClasses");
                });

            modelBuilder.Entity("EduZasAPI.Infraestructure.EntityFramework.Application.Users.User", b =>
                {
                    b.Navigation("ClassProfessors");

                    b.Navigation("ClassStudents");

                    b.Navigation("Classes");

                    b.Navigation("NotificationPerUsers");

                    b.Navigation("Resources");

                    b.Navigation("Tests");
                });
#pragma warning restore 612, 618
        }
    }
}
